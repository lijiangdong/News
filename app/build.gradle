apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.ext.news

    compileSdkVersion globalConfiguration.compileSdkVersion
    buildToolsVersion globalConfiguration.buildToolsVersion

    defaultConfig {
        applicationId globalConfiguration.applicationId
        minSdkVersion globalConfiguration.minSdkVersion
        targetSdkVersion globalConfiguration.targetSdkVersion
        versionCode globalConfiguration.versionCode
        versionName globalConfiguration.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("News.jks")
            storePassword "android"
            keyAlias "ljd"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled globalConfiguration.minifyEnabled  //设置代码进行混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled globalConfiguration.minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def appDependencies = rootProject.ext.appDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies
    def testDependencies = rootProject.ext.appTestDependencies

    compile appDependencies.supportV4
    compile appDependencies.appcompat
    compile appDependencies.design
    compile appDependencies.rxandroid
    compile appDependencies.rxjava
    compile appDependencies.butterknife
    apt appDependencies.butterknifeCompiler
    compile appDependencies.dagger
    apt appDependencies.daggerCompiler
    provided appDependencies.javaxAnnotation
    compile appDependencies.timber
    compile appDependencies.retrofit
    compile appDependencies.okHttpLog
    compile appDependencies.converterGson
    compile appDependencies.rxjavaAdapter
    compile appDependencies.glide
    compile appDependencies.andfix

    debugCompile developmentDependencies.leakCanary
    debugCompile developmentDependencies.stetho
    debugCompile developmentDependencies.stethoOkhttp

    // Dependencies for local unit tests
    testCompile testDependencies.junit
    testCompile testDependencies.mockito
    testCompile testDependencies.hamcrest
    testCompile testDependencies.robolectric

    // Android Testing Support Library's runner and rules
    androidTestCompile testDependencies.runner
    androidTestCompile testDependencies.rules

    // Dependencies for Android unit tests
    androidTestCompile testDependencies.junit
    androidTestCompile testDependencies.mockito
    androidTestCompile testDependencies.dexmaker
    androidTestCompile testDependencies.dexmakerMockito

    // Espresso UI Testing
    androidTestCompile testDependencies.espresso
    androidTestCompile (testDependencies.espressoContrib)
    androidTestCompile testDependencies.espressoIntents
    androidTestCompile testDependencies.robolectric

    // Resolve conflicts between main and test APK:
    androidTestCompile testDependencies.supportAnnotations
    androidTestCompile testDependencies.testingSupportLib
    androidTestCompile testDependencies.supportV4
    androidTestCompile testDependencies.recyclerviewV7
    androidTestCompile testDependencies.appcompat
    androidTestCompile testDependencies.design
}
